version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15
    container_name: quizrally_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-quizrally}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password}
      POSTGRES_DB: ${POSTGRES_DB:-quizrally_dev}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-quizrally}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and pub/sub
  redis:
    image: redis:7-alpine
    container_name: quizrally_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway
  api:
    build:
      context: .
      dockerfile: src/backend/services/api/Dockerfile
    container_name: quizrally_api
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-quizrally}:${POSTGRES_PASSWORD:-dev_password}@postgres:5432/${POSTGRES_DB:-quizrally_dev}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-dev_jwt_secret}
      - API_PORT=${API_PORT:-3000}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src/backend:/app
      - /app/node_modules
    restart: unless-stopped

  # WebSocket Gateway
  gateway:
    build:
      context: .
      dockerfile: src/backend/services/gateway/Dockerfile
    container_name: quizrally_gateway
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - GATEWAY_PORT=${GATEWAY_PORT:-8080}
      - JWT_SECRET=${JWT_SECRET:-dev_jwt_secret}
    ports:
      - "8080:8080"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./src/backend:/app
      - /app/node_modules
    restart: unless-stopped

  # Question Bank Service
  question-bank:
    build:
      context: .
      dockerfile: src/backend/services/question-bank/Dockerfile
    container_name: quizrally_question_bank
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-quizrally}:${POSTGRES_PASSWORD:-dev_password}@postgres:5432/${POSTGRES_DB:-quizrally_dev}
      - REDIS_URL=redis://redis:6379
    ports:
      - "3001:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src/backend:/app
      - /app/node_modules
    restart: unless-stopped

  # Scoring Service
  scoring:
    build:
      context: .
      dockerfile: src/backend/services/scoring/Dockerfile
    container_name: quizrally_scoring
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-quizrally}:${POSTGRES_PASSWORD:-dev_password}@postgres:5432/${POSTGRES_DB:-quizrally_dev}
      - REDIS_URL=redis://redis:6379
    ports:
      - "3002:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src/backend:/app
      - /app/node_modules
    restart: unless-stopped

  # Anti-Cheat Service
  anti-cheat:
    build:
      context: .
      dockerfile: src/backend/services/anti-cheat/Dockerfile
    container_name: quizrally_anti_cheat
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-quizrally}:${POSTGRES_PASSWORD:-dev_password}@postgres:5432/${POSTGRES_DB:-quizrally_dev}
      - REDIS_URL=redis://redis:6379
    ports:
      - "3003:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src/backend:/app
      - /app/node_modules
    restart: unless-stopped

  # Admin Service
  admin:
    build:
      context: .
      dockerfile: src/backend/services/admin/Dockerfile
    container_name: quizrally_admin
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-quizrally}:${POSTGRES_PASSWORD:-dev_password}@postgres:5432/${POSTGRES_DB:-quizrally_dev}
      - REDIS_URL=redis://redis:6379
    ports:
      - "3004:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src/backend:/app
      - /app/node_modules
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: quizrally_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - gateway
      - question-bank
      - scoring
      - anti-cheat
      - admin
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: quizrally_network
